@startuml
class shapes.DrawRectangle {
~ WaitForClick waitForClick
~ Dragging dragging
- Rectangle rect
- State state
~ void setState(State)
+ Rectangle getRectangle()
+ void mouseDown(Pos)
+ void mouseUp(Pos)
+ void mouseMove(Pos)
}


class shapes.Rectangle {
- Pos a
- Pos b
+ <<Create>> Rectangle()
+ <<Create>> Rectangle(Pos,Pos)
+ Pos getA()
+ Pos getB()
+ void setA(Pos)
+ void setB(Pos)
+ void accept(Visitor)
}


class shapes.WaitForClick {
- DrawRectangle context
+ <<Create>> WaitForClick(DrawRectangle)
+ void mouseUp(Pos)
+ void mouseDown(Pos)
+ void mouseMove(Pos)
}


class shapes.Dragging {
- DrawRectangle context
+ <<Create>> Dragging(DrawRectangle)
+ void mouseUp(Pos)
+ void mouseDown(Pos)
+ void mouseMove(Pos)
}


interface shapes.State {
~ void mouseUp(Pos)
~ void mouseDown(Pos)
~ void mouseMove(Pos)
}



shapes.Shape <|.. shapes.Rectangle
shapes.State <|.. shapes.WaitForClick
shapes.State <|.. shapes.Dragging
@enduml